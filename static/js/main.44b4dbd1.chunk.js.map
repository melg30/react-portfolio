{"version":3,"sources":["components/NavBar.js","pages/About.js","pages/Portfolio.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","isActive","window","location","pathname","activeClassName","About","Row","Col","xs","md","Image","src","rounded","class","href","target","Portfolio","CardDeck","Card","Img","variant","alt","Body","Title","Text","Link","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.44b4dbd1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Mel Garza\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-link\">\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              to=\"/\"\r\n              isActive={() => window.location.pathname === \"/\"}\r\n              activeClassName=\"active\"\r\n            >\r\n              About\r\n            </NavLink>\r\n          </li>\r\n          {/* <li className=\"nav-link\">\r\n                        <NavLink className=\"nav-link\" to=\"/contact\" activeClassName=\"active\">Contact</NavLink>\r\n                    </li> */}\r\n          <li className=\"nav-link\">\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              to=\"/portfolio\"\r\n              activeClassName=\"active\"\r\n            >\r\n              Portfolio\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst About = () => {\r\n  return (\r\n    // remember => a component(function) can only return ONE thing!!\r\n\r\n    <>\r\n      <Row>\r\n        <Col xs={12} md={12}>\r\n          <h2>About Me</h2>\r\n          <hr></hr>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Image id=\"melPhoto\" src=\"../../images/Me.jpg\" rounded></Image>\r\n          <p class=\"wrap-text\">\r\n            I'm originally from Austin, Texas but now call Denver, Colorado\r\n            home. I've been living out here for two years now and absolutely\r\n            love it! Being able to live in a city but still have the mountains\r\n            so close is my favorite thing about Denver. In my free time I enjoy\r\n            exploring new parts of town or heading out to the mountains to go\r\n            hiking, snowshoeing or snowboarding.\r\n            <br />\r\n          </p>\r\n          <p class=\"wrap-text\">\r\n            I currently work for Gusto on their Full-stack Customer Care team. I\r\n            assist our customers who use both our payroll and benefit features.\r\n            Most of my previous work experience is on customer service support\r\n            teams and I'm currently looking to make a career change into Web\r\n            Development!\r\n          </p>\r\n          <p>Check out what I've been working on!</p>\r\n          <p id=\"links\">\r\n            ~~~{\" \"}\r\n            <a\r\n              href=\"https://www.linkedin.com/in/mel-garza-14750a123/\"\r\n              class=\"Links\"\r\n              target=\"_blank\"\r\n            >\r\n              Linkedin\r\n            </a>\r\n            ~~~\r\n            <a href=\"https://github.com/melg30\" class=\"Links\" target=\"_blank\">\r\n              GitHub Profile\r\n            </a>{\" \"}\r\n            ~~~\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nconst Portfolio = () => {\r\n  return (\r\n    <div id=\"portfolioContainer\">\r\n      <CardDeck>\r\n        <Card>\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src=\"/public/images/Beer.png\"\r\n            alt=\"Beer Here\"\r\n          />\r\n          <Card.Body>\r\n            <Card.Title>Beer Here</Card.Title>\r\n            <Card.Text>Use our app the find Breweries near you!</Card.Text>\r\n          </Card.Body>\r\n          <Card.Body>\r\n            <Card.Link\r\n              href=\"https://keeleybb.github.io/12_11_Beer_Here/index.html\"\r\n              target=\"_blank\"\r\n            >\r\n              Web Link\r\n            </Card.Link>\r\n            <Card.Link\r\n              href=\"https://github.com/keeleybb/12_11_Beer_Here\"\r\n              target=\"_blank\"\r\n            >\r\n              Github Link\r\n            </Card.Link>\r\n          </Card.Body>\r\n        </Card>\r\n        <Card>\r\n          <Card.Img variant=\"top\" src=\"/images/Nerdify.png\" alt=\"Nerdify\" />\r\n          <Card.Body>\r\n            <Card.Title>Nerdify</Card.Title>\r\n            <Card.Text>\r\n              Are you a little nerdy? Use our app to find people who have are\r\n              apart of the same fandom, like the same games, and have similar\r\n              interests as you.\r\n            </Card.Text>\r\n          </Card.Body>\r\n          <Card.Body>\r\n            <Card.Link\r\n              href=\"https://calm-reef-29496.herokuapp.com/\"\r\n              target=\"_blank\"\r\n            >\r\n              Web Link\r\n            </Card.Link>\r\n            <Card.Link\r\n              href=\"https://github.com/hmbudzinski/ProjectTwo\"\r\n              target=\"_blank\"\r\n            >\r\n              Github Link\r\n            </Card.Link>\r\n          </Card.Body>\r\n        </Card>\r\n      </CardDeck>\r\n      <CardDeck>\r\n        <Card>\r\n          <Card.Img variant=\"top\" src=\"/images/Planner.png\" alt=\"Planner\" />\r\n          <Card.Body>\r\n            <Card.Title>Day Planner</Card.Title>\r\n            <Card.Text>Schedule your day hour by hour.</Card.Text>\r\n          </Card.Body>\r\n          <Card.Body>\r\n            <Card.Link\r\n              href=\"https://melg30.github.io/scheduler/\"\r\n              target=\"_blank\"\r\n            >\r\n              Web Link\r\n            </Card.Link>\r\n            <Card.Link\r\n              href=\"https://github.com/melg30/scheduler\"\r\n              target=\"_blank\"\r\n            >\r\n              Github Link\r\n            </Card.Link>\r\n          </Card.Body>\r\n        </Card>\r\n        <Card>\r\n          <Card.Img variant=\"top\" src=\"/images/Weather.png\" alt=\"Weather\" />\r\n          <Card.Body>\r\n            <Card.Title>Weather Dashboard</Card.Title>\r\n            <Card.Text>\r\n              Going out of town for the weekend? Search the 5 day weather\r\n              forecast so you are prepared for rain or shine!\r\n            </Card.Text>\r\n          </Card.Body>\r\n          <Card.Body>\r\n            <Card.Link\r\n              href=\"https://melg30.github.io/weather-dashboard/\"\r\n              target=\"_blank\"\r\n            >\r\n              Web Link\r\n            </Card.Link>\r\n            <Card.Link\r\n              href=\"https://github.com/melg30/weather-dashboard\"\r\n              target=\"_blank\"\r\n            >\r\n              Github Link\r\n            </Card.Link>\r\n          </Card.Body>\r\n        </Card>\r\n      </CardDeck>\r\n      <CardDeck>\r\n        <Card>\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src=\"/images/Workout.png\"\r\n            alt=\"Workout tracker\"\r\n          />\r\n          <Card.Body>\r\n            <Card.Title>Fitness Tracker</Card.Title>\r\n            <Card.Text>\r\n              Track your workouts, add to previous workouts, and see your\r\n              progress!\r\n            </Card.Text>\r\n          </Card.Body>\r\n          <Card.Body>\r\n            <Card.Link\r\n              href=\"https://warm-bayou-56967.herokuapp.com/\"\r\n              target=\"_blank\"\r\n            >\r\n              Web Link\r\n            </Card.Link>\r\n            <Card.Link\r\n              href=\"https://github.com/melg30/workout_tracker\"\r\n              target=\"_blank\"\r\n            >\r\n              Github Link\r\n            </Card.Link>\r\n          </Card.Body>\r\n        </Card>\r\n        <Card>\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src=\"/images/Team Generator.png\"\r\n            alt=\"Team Generator\"\r\n          />\r\n          <Card.Body>\r\n            <Card.Title>Employee Summary</Card.Title>\r\n            <Card.Text>\r\n              Generate a team through the command-line and create a team roster\r\n              that displays in the browser!\r\n            </Card.Text>\r\n          </Card.Body>\r\n          <Card.Body>\r\n            <Card.Link\r\n              href=\"https://github.com/melg30/employee_summary\"\r\n              target=\"_blank\"\r\n            >\r\n              Github Link\r\n            </Card.Link>\r\n          </Card.Body>\r\n        </Card>\r\n      </CardDeck>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NavBar from \"./components/NavBar\";\nimport About from \"./pages/About\";\nimport Portfolio from \"./pages/Portfolio\";\n\nfunction App() {\n  return (\n    <Router>\n      <NavBar />\n      <div className=\"container\">\n        <Switch>\n          {/* you can only match ONE route inside */}\n          {/* <Route exact path=\"/contact\" component={Contact} /> */}\n          <Route exact path=\"/portfolio\" component={Portfolio} />\n          {/* take home for anything else */}\n          <Route component={About} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}